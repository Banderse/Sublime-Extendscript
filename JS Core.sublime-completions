{
	"scope": "source.js - variable.other.js",

	"completions":
	[
/*JavaScript Keywords*/
{ "trigger": "abstract", "contents": "abstract" },
{ "trigger": "boolean", "contents": "boolean" },
{ "trigger": "break", "contents": "break" },
{ "trigger": "byte", "contents": "byte" },
{ "trigger": "case", "contents": "case" },
{ "trigger": "catch", "contents": "catch" },
{ "trigger": "char", "contents": "char" },
{ "trigger": "class", "contents": "class" },
{ "trigger": "const", "contents": "const" },
{ "trigger": "continue", "contents": "continue" },
{ "trigger": "debugger", "contents": "debugger" },
{ "trigger": "default", "contents": "default" },
{ "trigger": "delete", "contents": "delete" },
{ "trigger": "do", "contents": "do" },
{ "trigger": "double", "contents": "double" },
{ "trigger": "else", "contents": "else" },
{ "trigger": "enum", "contents": "enum" },
{ "trigger": "export", "contents": "export" },
{ "trigger": "extends", "contents": "extends" },
{ "trigger": "false", "contents": "false" },
{ "trigger": "final", "contents": "final" },
{ "trigger": "finally", "contents": "finally" },
{ "trigger": "float", "contents": "float" },
{ "trigger": "for", "contents": "for" },
{ "trigger": "function", "contents": "function" },
{ "trigger": "goto", "contents": "goto" },
{ "trigger": "if", "contents": "if" },
{ "trigger": "implements", "contents": "implements" },
{ "trigger": "import", "contents": "import" },
{ "trigger": "in", "contents": "in" },
{ "trigger": "instanceof", "contents": "instanceof" },
{ "trigger": "int", "contents": "int" },
{ "trigger": "interface", "contents": "interface" },
{ "trigger": "long", "contents": "long" },
{ "trigger": "native", "contents": "native" },
{ "trigger": "new", "contents": "new" },
{ "trigger": "null", "contents": "null" },
{ "trigger": "package", "contents": "package" },
{ "trigger": "private", "contents": "private" },
{ "trigger": "protected", "contents": "protected" },
{ "trigger": "public", "contents": "public" },
{ "trigger": "return", "contents": "return" },
{ "trigger": "short", "contents": "short" },
{ "trigger": "static", "contents": "static" },
{ "trigger": "super", "contents": "super" },
{ "trigger": "switch", "contents": "switch" },
{ "trigger": "synchronized", "contents": "synchronized" },
{ "trigger": "this", "contents": "this" },
{ "trigger": "throw", "contents": "throw" },
{ "trigger": "throws", "contents": "throws" },
{ "trigger": "transient", "contents": "transient" },
{ "trigger": "true", "contents": "true" },
{ "trigger": "try", "contents": "try" },
{ "trigger": "typeof", "contents": "typeof" },
{ "trigger": "var", "contents": "var" },
{ "trigger": "void", "contents": "void" },
{ "trigger": "volatile", "contents": "volatile" },
{ "trigger": "while", "contents": "while" },
{ "trigger": "with", "contents": "with" },

/*JavaScript Base Classes*/

{ "trigger": "Object", "contents": "Object" },
{ "trigger": "Array", "contents": "Array" },
{ "trigger": "Math", "contents": "Math" },
{ "trigger": "Date", "contents": "Date" },
{ "trigger": "Function", "contents": "Function" },
{ "trigger": "Global Elements", "contents": "Global Elements" },
{ "trigger": "String", "contents": "String" },
{ "trigger": "Number", "contents": "Number" },
{ "trigger": "Boolean", "contents": "Boolean" },
{ "trigger": "RegExp", "contents": "RegExp" },
{ "trigger": "Error", "contents": "Error" },
{ "trigger": "File", "contents": "File" },
{ "trigger": "Folder", "contents": "Folder" },
{ "trigger": "Socket", "contents": "Socket" },
{ "trigger": "ReflectionInfo", "contents": "ReflectionInfo" },
{ "trigger": "Reflection", "contents": "Reflection" },
{ "trigger": "QName", "contents": "QName" },
{ "trigger": "Namespace", "contents": "Namespace" },
{ "trigger": "XML", "contents": "XML" },
{ "trigger": "XMLList", "contents": "XMLList" },
{ "trigger": "UnitValue", "contents": "UnitValue" },

/*Global*/
{ "trigger": "NaN", "contents": "NaN" },
{ "trigger": "Infinity", "contents": "Infinity" },
{ "trigger": "undefined", "contents": "undefined" },
{ "trigger": "encodeURI()", "contents": "encodeURI()" },
{ "trigger": "encodeURIComponent()", "contents": "encodeURIComponent()" },
{ "trigger": "decodeURI()", "contents": "decodeURI()" },
{ "trigger": "decodeURIComponent()", "contents": "decodeURIComponent()" },
{ "trigger": "escape()", "contents": "escape()" },
{ "trigger": "eval()", "contents": "eval()" },
{ "trigger": "uneval()", "contents": "uneval()" },
{ "trigger": "isFinite()", "contents": "isFinite()" },
{ "trigger": "isNaN()", "contents": "isNaN()" },
{ "trigger": "parseInt()", "contents": "parseInt()" },
{ "trigger": "parseFloat()", "contents": "parseFloat()" },
{ "trigger": "unescape()", "contents": "unescape()" },
{ "trigger": "localize()", "contents": "localize()" },
{ "trigger": "isXMLName()", "contents": "isXMLName()" },
{ "trigger": "setDefaultXMLNamespace()", "contents": "setDefaultXMLNamespace()" },
{ "trigger": "alert()", "contents": "alert()" },
{ "trigger": "confirm()", "contents": "confirm()" },
{ "trigger": "prompt()", "contents": "prompt()" },

{ "trigger": "Math.E", "contents": "Math.E" },
{ "trigger": "Math.LN10", "contents": "Math.LN10" },
{ "trigger": "Math.LN2", "contents": "Math.LN2" },
{ "trigger": "Math.LOG2E", "contents": "Math.LOG2E" },
{ "trigger": "Math.LOG10E", "contents": "Math.LOG10E" },
{ "trigger": "Math.PI", "contents": "Math.PI" },
{ "trigger": "Math.SQRT1_2", "contents": "Math.SQRT1_2" },
{ "trigger": "Math.SQRT2", "contents": "Math.SQRT2" },
{ "trigger": "Math.abs()", "contents": "Math.abs()" },
{ "trigger": "Math.acos()", "contents": "Math.acos()" },
{ "trigger": "Math.asin()", "contents": "Math.asin()" },
{ "trigger": "Math.atan()", "contents": "Math.atan()" },
{ "trigger": "Math.atan2()", "contents": "Math.atan2()" },
{ "trigger": "Math.ceil()", "contents": "Math.ceil()" },
{ "trigger": "Math.cos()", "contents": "Math.cos()" },
{ "trigger": "Math.exp()", "contents": "Math.exp()" },
{ "trigger": "Math.floor()", "contents": "Math.floor()" },
{ "trigger": "Math.log()", "contents": "Math.log()" },
{ "trigger": "Math.max()", "contents": "Math.max()" },
{ "trigger": "Math.min()", "contents": "Math.min()" },
{ "trigger": "Math.pow()", "contents": "Math.pow()" },
{ "trigger": "Math.random()", "contents": "Math.random()" },
{ "trigger": "Math.round()", "contents": "Math.round()" },
{ "trigger": "Math.sin()", "contents": "Math.sin()" },
{ "trigger": "Math.sqrt()", "contents": "Math.sqrt()" },
{ "trigger": "Math.tan()", "contents": "Math.tan()" },

{ "trigger": "$.error", "contents": "\\$.error" },
{ "trigger": "$.version", "contents": "\\$.version" },
{ "trigger": "$.build", "contents": "\\$.build" },
{ "trigger": "$.buildDate", "contents": "\\$.buildDate" },
{ "trigger": "$.global", "contents": "\\$.global" },
{ "trigger": "$.stack", "contents": "\\$.stack" },
{ "trigger": "$.level", "contents": "\\$.level" },
{ "trigger": "$.flags", "contents": "\\$.flags" },
{ "trigger": "$.strict", "contents": "\\$.strict" },
{ "trigger": "$.locale", "contents": "\\$.locale" },
{ "trigger": "$.localize", "contents": "\\$.localize" },
{ "trigger": "$.decimalPoint", "contents": "\\$.decimalPoint" },
{ "trigger": "$.memCache", "contents": "\\$.memCache" },
{ "trigger": "$.screens", "contents": "\\$.screens" },
{ "trigger": "$.os", "contents": "\\$.os" },
{ "trigger": "$.fileName", "contents": "\\$.fileName" },
{ "trigger": "$.line", "contents": "\\$.line" },
{ "trigger": "$.hiresTimer", "contents": "\\$.hiresTimer" },
{ "trigger": "$.engineName", "contents": "\\$.engineName" },
{ "trigger": "$.includePath", "contents": "\\$.includePath" },
{ "trigger": "$.about()", "contents": "\\$.about()" },
{ "trigger": "$.toString()", "contents": "\\$.toString()" },
{ "trigger": "$.write()", "contents": "\\$.write()" },
{ "trigger": "$.writeln()", "contents": "\\$.writeln()" },
{ "trigger": "$.bp()", "contents": "\\$.bp()" },
{ "trigger": "$.getenv()", "contents": "\\$.getenv()" },
{ "trigger": "$.setenv()", "contents": "\\$.setenv()" },
{ "trigger": "$.sleep()", "contents": "\\$.sleep()" },
{ "trigger": "$.colorPicker()", "contents": "\\$.colorPicker()" },
{ "trigger": "$.evalFile()", "contents": "\\$.evalFile()" },
{ "trigger": "$.gc()", "contents": "\\$.gc()" },

/*Object "Object"*/
{ "trigger": "Object()", "contents": "Object()" },
{ "trigger": "isValid()", "contents": "isValid()" },
{ "trigger": "prototype", "contents": "prototype" },
{ "trigger": "constructor", "contents": "constructor" },
{ "trigger": "reflect", "contents": "reflect" },
{ "trigger": "toString()", "contents": "toString()" },
{ "trigger": "toLocaleString()", "contents": "toLocaleString()" },
{ "trigger": "hasOwnProperty()", "contents": "hasOwnProperty()" },
{ "trigger": "propertyIsEnumerable()", "contents": "propertyIsEnumerable()" },
{ "trigger": "isPrototypeOf()", "contents": "isPrototypeOf()" },
{ "trigger": "valueOf()", "contents": "valueOf()" },
{ "trigger": "toSource()", "contents": "toSource()" },
{ "trigger": "unwatch()", "contents": "unwatch()" },
{ "trigger": "watch()", "contents": "watch()" },

{ "trigger": "Number.MIN_VALUE", "contents": "Number.MIN_VALUE" },
{ "trigger": "Number.MAX_VALUE", "contents": "Number.MAX_VALUE" },
{ "trigger": "Number.NaN", "contents": "Number.NaN" },
{ "trigger": "Number.NEGATIVE_INFINITY", "contents": "Number.NEGATIVE_INFINITY" },
{ "trigger": "Number.POSITIVE_INFINITY", "contents": "Number.POSITIVE_INFINITY" },

{ "trigger": "Array()", "contents": "Array()" },
{ "trigger": "Array-length", "contents": "length" },
{ "trigger": "Array-concat()", "contents": "concat()" },
{ "trigger": "Array-join()", "contents": "join()" },
{ "trigger": "Array-reverse()", "contents": "reverse()" },
{ "trigger": "Array-slice()", "contents": "slice()" },
{ "trigger": "Array-sort()", "contents": "sort()" },
{ "trigger": "Array-pop()", "contents": "pop()" },
{ "trigger": "Array-push()", "contents": "push()" },
{ "trigger": "Array-splice()", "contents": "splice()" },
{ "trigger": "Array-shift()", "contents": "shift()" },
{ "trigger": "Array-toString()", "contents": "toString()" },
{ "trigger": "Array-toLocaleString()", "contents": "toLocaleString()" },
{ "trigger": "Array-unshift()", "contents": "unshift()" },
{ "trigger": "Array-toSource()", "contents": "toSource()" },

{ "trigger": "Date()", "contents": "Date()" },

{ "trigger": "Date-parse()", "contents": "parse()" },
{ "trigger": "Date-UTC()", "contents": "UTC()" },
{ "trigger": "Date-getDate()", "contents": "getDate()" },
{ "trigger": "Date-getDay()", "contents": "getDay()" },
{ "trigger": "Date-getYear()", "contents": "getYear()" },
{ "trigger": "Date-getFullYear()", "contents": "getFullYear()" },
{ "trigger": "Date-getHours()", "contents": "getHours()" },
{ "trigger": "Date-getMilliseconds()", "contents": "getMilliseconds()" },
{ "trigger": "Date-getMinutes()", "contents": "getMinutes()" },
{ "trigger": "Date-getMonth()", "contents": "getMonth()" },
{ "trigger": "Date-getSeconds()", "contents": "getSeconds()" },
{ "trigger": "Date-getTime()", "contents": "getTime()" },
{ "trigger": "Date-getTimezoneOffset()", "contents": "getTimezoneOffset()" },
{ "trigger": "Date-getUTCDate()", "contents": "getUTCDate()" },
{ "trigger": "Date-getUTCDay()", "contents": "getUTCDay()" },
{ "trigger": "Date-getUTCFullYear()", "contents": "getUTCFullYear()" },
{ "trigger": "Date-getUTCHours()", "contents": "getUTCHours()" },
{ "trigger": "Date-getUTCMilliseconds()", "contents": "getUTCMilliseconds()" },
{ "trigger": "Date-getUTCMinutes()", "contents": "getUTCMinutes()" },
{ "trigger": "Date-getUTCMonth()", "contents": "getUTCMonth()" },
{ "trigger": "Date-getUTCSeconds()", "contents": "getUTCSeconds()" },
{ "trigger": "Date-setDate()", "contents": "setDate()" },
{ "trigger": "Date-setFullYear()", "contents": "setFullYear()" },
{ "trigger": "Date-setHours()", "contents": "setHours()" },
{ "trigger": "Date-setMilliseconds()", "contents": "setMilliseconds()" },
{ "trigger": "Date-setMinutes()", "contents": "setMinutes()" },
{ "trigger": "Date-setSeconds()", "contents": "setSeconds()" },
{ "trigger": "Date-setMonth()", "contents": "setMonth()" },
{ "trigger": "Date-setUTCDate()", "contents": "setUTCDate()" },
{ "trigger": "Date-setUTCFullYear()", "contents": "setUTCFullYear()" },
{ "trigger": "Date-setUTCHours()", "contents": "setUTCHours()" },
{ "trigger": "Date-setUTCMilliseconds()", "contents": "setUTCMilliseconds()" },
{ "trigger": "Date-setUTCMinutes()", "contents": "setUTCMinutes()" },
{ "trigger": "Date-setUTCSeconds()", "contents": "setUTCSeconds()" },
{ "trigger": "Date-setUTCMonth()", "contents": "setUTCMonth()" },
{ "trigger": "Date-setTime()", "contents": "setTime()" },
{ "trigger": "Date-setYear()", "contents": "setYear()" },
{ "trigger": "Date-toDateString()", "contents": "toDateString()" },
{ "trigger": "Date-toTimeString()", "contents": "toTimeString()" },
{ "trigger": "Date-toLocaleString()", "contents": "toLocaleString()" },
{ "trigger": "Date-toLocaleDateString()", "contents": "toLocaleDateString()" },
{ "trigger": "Date-toLocaleTimeString()", "contents": "toLocaleTimeString()" },
{ "trigger": "Date-toGMTString()", "contents": "toGMTString()" },
{ "trigger": "Date-toUTCString()", "contents": "toUTCString()" },
{ "trigger": "Date-toString()", "contents": "toString()" },
{ "trigger": "Date-valueOf()", "contents": "valueOf()" },
{ "trigger": "Date-toSource()", "contents": "toSource()" },

{ "trigger": "Function()", "contents": "Function()" },

{ "trigger": "Function-arguments", "contents": "arguments" },
{ "trigger": "Function-length", "contents": "length" },
{ "trigger": "Function-arity", "contents": "arity" },
{ "trigger": "Function-name", "contents": "name" },
{ "trigger": "Function-apply()", "contents": "apply()" },
{ "trigger": "Function-call()", "contents": "call()" },
{ "trigger": "Function-toSource()", "contents": "toSource()" },
{ "trigger": "Function-toString()", "contents": "toString()" },

{ "trigger": "String()", "contents": "String()" },

{ "trigger": "String-fromCharCode()", "contents": "fromCharCode()" },

{ "trigger": "String-length", "contents": "length" },
{ "trigger": "String-toString()", "contents": "toString()" },
{ "trigger": "String-toSource()", "contents": "toSource()" },
{ "trigger": "String-valueOf()", "contents": "valueOf()" },
{ "trigger": "String-charAt()", "contents": "charAt()" },
{ "trigger": "String-charCodeAt()", "contents": "charCodeAt()" },
{ "trigger": "String-concat()", "contents": "concat()" },
{ "trigger": "String-indexOf()", "contents": "indexOf()" },
{ "trigger": "String-lastIndexOf()", "contents": "lastIndexOf()" },
{ "trigger": "String-slice()", "contents": "slice()" },
{ "trigger": "String-toLowerCase()", "contents": "toLowerCase()" },
{ "trigger": "String-toUpperCase()", "contents": "toUpperCase()" },
{ "trigger": "String-toLocaleLowerCase()", "contents": "toLocaleLowerCase()" },
{ "trigger": "String-toLocaleUpperCase()", "contents": "toLocaleUpperCase()" },
{ "trigger": "String-localeCompare()", "contents": "localeCompare()" },
{ "trigger": "String-match()", "contents": "match()" },
{ "trigger": "String-replace()", "contents": "replace()" },
{ "trigger": "String-search()", "contents": "search()" },
{ "trigger": "String-split()", "contents": "split()" },
{ "trigger": "String-substr()", "contents": "substr()" },
{ "trigger": "String-substring()", "contents": "substring()" },
{ "trigger": "String-anchor()", "contents": "anchor()" },
{ "trigger": "String-big()", "contents": "big()" },
{ "trigger": "String-blink()", "contents": "blink()" },
{ "trigger": "String-bold()", "contents": "bold()" },
{ "trigger": "String-fixed()", "contents": "fixed()" },
{ "trigger": "String-fontcolor()", "contents": "fontcolor()" },
{ "trigger": "String-fontsize()", "contents": "fontsize()" },
{ "trigger": "String-italics()", "contents": "italics()" },
{ "trigger": "String-link()", "contents": "link()" },
{ "trigger": "String-small()", "contents": "small()" },
{ "trigger": "String-strike()", "contents": "strike()" },
{ "trigger": "String-sub()", "contents": "sub()" },
{ "trigger": "String-sup()", "contents": "sup()" },

{ "trigger": "Number()", "contents": "Number()" },

{ "trigger": "Number-toSource()", "contents": "toSource()" },
{ "trigger": "Number-toString()", "contents": "toString()" },
{ "trigger": "Number-toLocaleString()", "contents": "toLocaleString()" },
{ "trigger": "Number-toFixed()", "contents": "toFixed()" },
{ "trigger": "Number-toExponential()", "contents": "toExponential()" },
{ "trigger": "Number-toPrecision()", "contents": "toPrecision()" },
{ "trigger": "Number-valueOf()", "contents": "valueOf()" },

{ "trigger": "Boolean()", "contents": "Boolean()" },

{ "trigger": "Boolean-toSource()", "contents": "toSource()" },
{ "trigger": "Boolean-toString()", "contents": "toString()" },
{ "trigger": "Boolean-valueOf()", "contents": "valueOf()" },

{ "trigger": "RegExp()", "contents": "RegExp()" },

{ "trigger": "RegExp-lastMatch", "contents": "lastMatch" },
{ "trigger": "RegExp-lastParen", "contents": "lastParen" },
{ "trigger": "RegExp-leftContext", "contents": "leftContext" },
{ "trigger": "RegExp-rightContext", "contents": "rightContext" },
{ "trigger": "RegExp-global", "contents": "global" },
{ "trigger": "RegExp-ignoreCase", "contents": "ignoreCase" },
{ "trigger": "RegExp-multiline", "contents": "multiline" },
{ "trigger": "RegExp-input", "contents": "input" },

{ "trigger": "RegExp-toString()", "contents": "toString()" },
{ "trigger": "RegExp-compile()", "contents": "compile()" },
{ "trigger": "RegExp-exec()", "contents": "exec()" },
{ "trigger": "RegExp-test()", "contents": "test()" },

{ "trigger": "Error()", "contents": "Error()" },

{ "trigger": "Error-description", "contents": "description" },
{ "trigger": "Error-toString()", "contents": "toString()" },
{ "trigger": "Error-toSource()", "contents": "toSource()" },

{ "trigger": "File()", "contents": "File()" },

{ "trigger": "File-fs", "contents": "fs" },
{ "trigger": "File-encode()", "contents": "encode()" },
{ "trigger": "File-decode()", "contents": "decode()" },
{ "trigger": "File-isEncodingAvailable()", "contents": "isEncodingAvailable()" },
{ "trigger": "File-openDialog()", "contents": "openDialog()" },
{ "trigger": "File-saveDialog()", "contents": "saveDialog()" },

{ "trigger": "File-alias", "contents": "alias" },
{ "trigger": "File-created", "contents": "created" },
{ "trigger": "File-error", "contents": "error" },
{ "trigger": "File-exists", "contents": "exists" },
{ "trigger": "File-fsName", "contents": "fsName" },
{ "trigger": "File-fullName", "contents": "fullName" },
{ "trigger": "File-absoluteURI", "contents": "absoluteURI" },
{ "trigger": "File-relativeURI", "contents": "relativeURI" },
{ "trigger": "File-modified", "contents": "modified" },
{ "trigger": "File-name", "contents": "name" },
{ "trigger": "File-displayName", "contents": "displayName" },
{ "trigger": "File-path", "contents": "path" },
{ "trigger": "File-parent", "contents": "parent" },
{ "trigger": "File-type", "contents": "type" },
{ "trigger": "File-creator", "contents": "creator" },
{ "trigger": "File-hidden", "contents": "hidden" },
{ "trigger": "File-readonly", "contents": "readonly" },
{ "trigger": "File-lineFeed", "contents": "lineFeed" },
{ "trigger": "File-length", "contents": "length" },
{ "trigger": "File-encoding", "contents": "encoding" },
{ "trigger": "File-eof", "contents": "eof" },
{ "trigger": "File-resolve()", "contents": "resolve()" },
{ "trigger": "File-rename()", "contents": "rename()" },
{ "trigger": "File-remove()", "contents": "remove()" },
{ "trigger": "File-changePath()", "contents": "changePath()" },
{ "trigger": "File-getRelativeURI()", "contents": "getRelativeURI()" },
{ "trigger": "File-execute()", "contents": "execute()" },
{ "trigger": "File-openDlg()", "contents": "openDlg()" },
{ "trigger": "File-saveDlg()", "contents": "saveDlg()" },
{ "trigger": "File-toString()", "contents": "toString()" },
{ "trigger": "File-toSource()", "contents": "toSource()" },
{ "trigger": "File-createAlias()", "contents": "createAlias()" },
{ "trigger": "File-open()", "contents": "open()" },
{ "trigger": "File-close()", "contents": "close()" },
{ "trigger": "File-read()", "contents": "read()" },
{ "trigger": "File-readch()", "contents": "readch()" },
{ "trigger": "File-readln()", "contents": "readln()" },
{ "trigger": "File-write()", "contents": "write()" },
{ "trigger": "File-writeln()", "contents": "writeln()" },
{ "trigger": "File-seek()", "contents": "seek()" },
{ "trigger": "File-tell()", "contents": "tell()" },
{ "trigger": "File-copy()", "contents": "copy()" },

{ "trigger": "Folder()", "contents": "Folder()" },

{ "trigger": "Folder-fs", "contents": "fs" },
{ "trigger": "Folder-current", "contents": "current" },
{ "trigger": "Folder-startup", "contents": "startup" },
{ "trigger": "Folder-appPackage", "contents": "appPackage" },
{ "trigger": "Folder-system", "contents": "system" },
{ "trigger": "Folder-trash", "contents": "trash" },
{ "trigger": "Folder-temp", "contents": "temp" },
{ "trigger": "Folder-userData", "contents": "userData" },
{ "trigger": "Folder-appData", "contents": "appData" },
{ "trigger": "Folder-commonFiles", "contents": "commonFiles" },
{ "trigger": "Folder-myDocuments", "contents": "myDocuments" },
{ "trigger": "Folder-desktop", "contents": "desktop" },
{ "trigger": "Folder-encode()", "contents": "encode()" },
{ "trigger": "Folder-decode()", "contents": "decode()" },
{ "trigger": "Folder-isEncodingAvailable()", "contents": "isEncodingAvailable()" },
{ "trigger": "Folder-selectDialog()", "contents": "selectDialog()" },

{ "trigger": "Folder-alias", "contents": "alias" },
{ "trigger": "Folder-created", "contents": "created" },
{ "trigger": "Folder-error", "contents": "error" },
{ "trigger": "Folder-exists", "contents": "exists" },
{ "trigger": "Folder-fsName", "contents": "fsName" },
{ "trigger": "Folder-fullName", "contents": "fullName" },
{ "trigger": "Folder-absoluteURI", "contents": "absoluteURI" },
{ "trigger": "Folder-relativeURI", "contents": "relativeURI" },
{ "trigger": "Folder-modified", "contents": "modified" },
{ "trigger": "Folder-name", "contents": "name" },
{ "trigger": "Folder-displayName", "contents": "displayName" },
{ "trigger": "Folder-path", "contents": "path" },
{ "trigger": "Folder-parent", "contents": "parent" },
{ "trigger": "Folder-resolve()", "contents": "resolve()" },
{ "trigger": "Folder-rename()", "contents": "rename()" },
{ "trigger": "Folder-remove()", "contents": "remove()" },
{ "trigger": "Folder-changePath()", "contents": "changePath()" },
{ "trigger": "Folder-getRelativeURI()", "contents": "getRelativeURI()" },
{ "trigger": "Folder-execute()", "contents": "execute()" },
{ "trigger": "Folder-toString()", "contents": "toString()" },
{ "trigger": "Folder-toSource()", "contents": "toSource()" },
{ "trigger": "Folder-selectDlg()", "contents": "selectDlg()" },
{ "trigger": "Folder-getFiles()", "contents": "getFiles()" },
{ "trigger": "Folder-create()", "contents": "create()" },

{ "trigger": "Socket()", "contents": "Socket()" },

{ "trigger": "Socket-host", "contents": "host" },
{ "trigger": "Socket-encoding", "contents": "encoding" },
{ "trigger": "Socket-error", "contents": "error" },
{ "trigger": "Socket-eof", "contents": "eof" },
{ "trigger": "Socket-connected", "contents": "connected" },
{ "trigger": "Socket-timeout", "contents": "timeout" },
{ "trigger": "Socket-open()", "contents": "open()" },
{ "trigger": "Socket-listen()", "contents": "listen()" },
{ "trigger": "Socket-close()", "contents": "close()" },
{ "trigger": "Socket-read()", "contents": "read()" },
{ "trigger": "Socket-readln()", "contents": "readln()" },
{ "trigger": "Socket-write()", "contents": "write()" },
{ "trigger": "Socket-writeln()", "contents": "writeln()" },
{ "trigger": "Socket-poll()", "contents": "poll()" },

{ "trigger": "ReflectionInfo-parent", "contents": "parent" },
{ "trigger": "ReflectionInfo-name", "contents": "name" },
{ "trigger": "ReflectionInfo-type", "contents": "type" },
{ "trigger": "ReflectionInfo-dataType", "contents": "dataType" },
{ "trigger": "ReflectionInfo-arguments", "contents": "arguments" },
{ "trigger": "ReflectionInfo-min", "contents": "min" },
{ "trigger": "ReflectionInfo-max", "contents": "max" },
{ "trigger": "ReflectionInfo-defaultValue", "contents": "defaultValue" },
{ "trigger": "ReflectionInfo-isCollection", "contents": "isCollection" },
{ "trigger": "ReflectionInfo-description", "contents": "description" },
{ "trigger": "ReflectionInfo-help", "contents": "help" },
{ "trigger": "ReflectionInfo-sampleCode", "contents": "sampleCode" },
{ "trigger": "ReflectionInfo-sampleFile", "contents": "sampleFile" },

{ "trigger": "Reflection-name", "contents": "name" },
{ "trigger": "Reflection-methods", "contents": "methods" },
{ "trigger": "Reflection-properties", "contents": "properties" },
{ "trigger": "Reflection-staticMethods", "contents": "staticMethods" },
{ "trigger": "Reflection-staticProperties", "contents": "staticProperties" },
{ "trigger": "Reflection-description", "contents": "description" },
{ "trigger": "Reflection-help", "contents": "help" },
{ "trigger": "Reflection-sampleCode", "contents": "sampleCode" },
{ "trigger": "Reflection-sampleFile", "contents": "sampleFile" },
{ "trigger": "Reflection-find()", "contents": "find()" },
{ "trigger": "Reflection-toXML()", "contents": "toXML()" },

{ "trigger": "QName()", "contents": "QName()" },

{ "trigger": "QName-uri", "contents": "uri" },
{ "trigger": "QName-localName", "contents": "localName" },

{ "trigger": "Namespace()", "contents": "Namespace()" },

{ "trigger": "Namespace-prefix", "contents": "prefix" },
{ "trigger": "Namespace-uri", "contents": "uri" },

{ "trigger": "XML()", "contents": "XML()" },

{ "trigger": "XML-ignoreComments", "contents": "ignoreComments" },
{ "trigger": "XML-ignoreProcessingInstructions", "contents": "ignoreProcessingInstructions" },
{ "trigger": "XML-ignoreWhitespace", "contents": "ignoreWhitespace" },
{ "trigger": "XML-prettyPrinting", "contents": "prettyPrinting" },
{ "trigger": "XML-prettyIndent", "contents": "prettyIndent" },
{ "trigger": "XML-settings()", "contents": "settings()" },
{ "trigger": "XML-setSettings()", "contents": "setSettings()" },
{ "trigger": "XML-defaultSettings()", "contents": "defaultSettings()" },

{ "trigger": "XML-addNamespace()", "contents": "addNamespace()" },
{ "trigger": "XML-appendChild()", "contents": "appendChild()" },
{ "trigger": "XML-attribute()", "contents": "attribute()" },
{ "trigger": "XML-attributes()", "contents": "attributes()" },
{ "trigger": "XML-child()", "contents": "child()" },
{ "trigger": "XML-childIndex()", "contents": "childIndex()" },
{ "trigger": "XML-children()", "contents": "children()" },
{ "trigger": "XML-comments()", "contents": "comments()" },
{ "trigger": "XML-contains()", "contents": "contains()" },
{ "trigger": "XML-copy()", "contents": "copy()" },
{ "trigger": "XML-descendants()", "contents": "descendants()" },
{ "trigger": "XML-elements()", "contents": "elements()" },
{ "trigger": "XML-hasComplexContent()", "contents": "hasComplexContent()" },
{ "trigger": "XML-hasSimpleContent()", "contents": "hasSimpleContent()" },
{ "trigger": "XML-inScopeNamespaces()", "contents": "inScopeNamespaces()" },
{ "trigger": "XML-insertChildAfter()", "contents": "insertChildAfter()" },
{ "trigger": "XML-insertChildBefore()", "contents": "insertChildBefore()" },
{ "trigger": "XML-length()", "contents": "length()" },
{ "trigger": "XML-localName()", "contents": "localName()" },
{ "trigger": "XML-name()", "contents": "name()" },
{ "trigger": "XML-namespace()", "contents": "namespace()" },
{ "trigger": "XML-namespaceDeclarations()", "contents": "namespaceDeclarations()" },
{ "trigger": "XML-nodeKind()", "contents": "nodeKind()" },
{ "trigger": "XML-normalize()", "contents": "normalize()" },
{ "trigger": "XML-parent()", "contents": "parent()" },
{ "trigger": "XML-processingInstructions()", "contents": "processingInstructions()" },
{ "trigger": "XML-prependChild()", "contents": "prependChild()" },
{ "trigger": "XML-removeNamespace()", "contents": "removeNamespace()" },
{ "trigger": "XML-replace()", "contents": "replace()" },
{ "trigger": "XML-setChildren()", "contents": "setChildren()" },
{ "trigger": "XML-setLocalName()", "contents": "setLocalName()" },
{ "trigger": "XML-setName()", "contents": "setName()" },
{ "trigger": "XML-setNamespace()", "contents": "setNamespace()" },
{ "trigger": "XML-text()", "contents": "text()" },
{ "trigger": "XML-toString()", "contents": "toString()" },
{ "trigger": "XML-toXMLString()", "contents": "toXMLString()" },
{ "trigger": "XML-xpath()", "contents": "xpath()" },

{ "trigger": "UnitValue-baseUnit", "contents": "baseUnit" },

{ "trigger": "UnitValue-type", "contents": "type" },
{ "trigger": "UnitValue-value", "contents": "value" },
{ "trigger": "UnitValue-baseUnit", "contents": "baseUnit" },
{ "trigger": "UnitValue-convert()", "contents": "convert()" },
{ "trigger": "UnitValue-as()", "contents": "as()" }
	]
}
